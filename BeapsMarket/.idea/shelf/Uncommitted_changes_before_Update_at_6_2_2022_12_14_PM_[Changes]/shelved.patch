Index: src/main/java/com/beapsmarket/webapp/service/UserServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.beapsmarket.webapp.service;\r\n\r\nimport com.beapsmarket.webapp.mapper.UserMapper;\r\nimport com.beapsmarket.webapp.model.dto.UserDto;\r\nimport com.beapsmarket.webapp.model.entities.User;\r\nimport com.beapsmarket.webapp.repository.UserRepository;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport java.util.HashSet;\r\nimport java.util.Set;\r\nimport java.util.stream.Collectors;\r\n\r\n@Service\r\npublic class UserServiceImpl implements IUser{\r\n\r\n    @Autowired\r\n    UserRepository userRepository;\r\n\r\n    @Autowired\r\n    UserMapper userMapper;\r\n\r\n    @Autowired\r\n    IAddress iAddress;\r\n\r\n\r\n    @Override\r\n    public int saveUser(UserDto userDto) {\r\n        if (userRepository.existsByEmail(userDto.getEmail())){\r\n            return -1;\r\n        }\r\n        return userRepository.save(userMapper.toEntity(userDto)).getId().intValue();\r\n    }\r\n\r\n    @Override\r\n    public Set<UserDto> findAllUser() {\r\n        Set<User> users = new HashSet<>(userRepository.findAll());\r\n        return users.stream().map(userMapper::toDto).collect(Collectors.toSet());\r\n    }\r\n\r\n    @Override\r\n    public UserDto findUserByUsername(String string) {\r\n        try{\r\n            User user = userRepository.findUsersByUsername(string);\r\n            UserDto userDto = userMapper.toDto(user);\r\n            userDto.setAddressesDtos(iAddress.findAddressesOfUser(userDto));\r\n            return userDto;\r\n        }catch (Exception e){\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public UserDto findUserByEmail(String string) {\r\n        try{\r\n            User user = userRepository.findUsersByEmail(string);\r\n            return userMapper.toDto(user);\r\n        }catch (Exception e){\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public int updateUser(UserDto userDto) {\r\n        try {\r\n            User user = userRepository.findUsersByEmail(userDto.getEmail());\r\n            userMapper.copy(userDto, user);\r\n            return userRepository.save(user).getId().intValue();\r\n        }catch (Exception e){\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    @Override\r\n    public int deleteUserByEmail(String email) {\r\n        try{\r\n            userRepository.deleteByEmail(email);\r\n            return 0;\r\n        }catch (Exception e){\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return -1;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/beapsmarket/webapp/service/UserServiceImpl.java b/src/main/java/com/beapsmarket/webapp/service/UserServiceImpl.java
--- a/src/main/java/com/beapsmarket/webapp/service/UserServiceImpl.java	(revision aeb32d9adca38e29f674edbc26b38bdb8198ca72)
+++ b/src/main/java/com/beapsmarket/webapp/service/UserServiceImpl.java	(date 1654095267813)
@@ -41,10 +41,7 @@
     @Override
     public UserDto findUserByUsername(String string) {
         try{
-            User user = userRepository.findUsersByUsername(string);
-            UserDto userDto = userMapper.toDto(user);
-            userDto.setAddressesDtos(iAddress.findAddressesOfUser(userDto));
-            return userDto;
+           return userMapper.toDto(userRepository.findUsersByUsername(string));
         }catch (Exception e){
             System.out.println(e.getMessage());
         }
Index: src/main/java/com/beapsmarket/webapp/service/IAddress.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.beapsmarket.webapp.service;\r\n\r\nimport com.beapsmarket.webapp.model.dto.AddressDto;\r\nimport com.beapsmarket.webapp.model.dto.UserDto;\r\n\r\nimport java.util.Set;\r\n\r\npublic interface IAddress {\r\n    int saveAddress(AddressDto addressDto);\r\n    Set<AddressDto> findAllAddress();\r\n    Set<AddressDto> findAddressesOfUser(UserDto userDto);\r\n    AddressDto findAddressByCode(int i);\r\n    int updateAddress(AddressDto addressDto);\r\n    int deleteAddress(AddressDto addressDto);\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/beapsmarket/webapp/service/IAddress.java b/src/main/java/com/beapsmarket/webapp/service/IAddress.java
--- a/src/main/java/com/beapsmarket/webapp/service/IAddress.java	(revision aeb32d9adca38e29f674edbc26b38bdb8198ca72)
+++ b/src/main/java/com/beapsmarket/webapp/service/IAddress.java	(date 1654095267841)
@@ -8,7 +8,6 @@
 public interface IAddress {
     int saveAddress(AddressDto addressDto);
     Set<AddressDto> findAllAddress();
-    Set<AddressDto> findAddressesOfUser(UserDto userDto);
     AddressDto findAddressByCode(int i);
     int updateAddress(AddressDto addressDto);
     int deleteAddress(AddressDto addressDto);
Index: src/main/java/com/beapsmarket/webapp/presentation/controller/UserController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/beapsmarket/webapp/presentation/controller/UserController.java b/src/main/java/com/beapsmarket/webapp/presentation/controller/UserController.java
new file mode 100644
--- /dev/null	(date 1654165068724)
+++ b/src/main/java/com/beapsmarket/webapp/presentation/controller/UserController.java	(date 1654165068724)
@@ -0,0 +1,26 @@
+package com.beapsmarket.webapp.presentation.controller;
+
+
+import com.beapsmarket.webapp.service.IUser;
+import lombok.extern.slf4j.Slf4j;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Controller;
+import org.springframework.ui.Model;
+import org.springframework.web.bind.annotation.GetMapping;
+
+
+@Controller
+@Slf4j
+public class UserController {
+    @Autowired
+    IUser iUser;
+
+
+    @GetMapping("/")
+    public String pageAccueil(Model model){
+
+        return "index";
+    }
+
+
+}
Index: src/main/java/com/beapsmarket/webapp/presentation/controller/ProductController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/beapsmarket/webapp/presentation/controller/ProductController.java b/src/main/java/com/beapsmarket/webapp/presentation/controller/ProductController.java
new file mode 100644
--- /dev/null	(date 1654159079044)
+++ b/src/main/java/com/beapsmarket/webapp/presentation/controller/ProductController.java	(date 1654159079044)
@@ -0,0 +1,100 @@
+package com.beapsmarket.webapp.presentation.controller;
+
+
+import com.beapsmarket.webapp.model.dto.ProductDto;
+import com.beapsmarket.webapp.service.IProduct;
+import lombok.extern.slf4j.Slf4j;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Controller;
+import org.springframework.ui.Model;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.ModelAttribute;
+import org.springframework.web.bind.annotation.PostMapping;
+import org.springframework.web.bind.annotation.RequestParam;
+
+import java.util.Set;
+
+@Controller
+@Slf4j
+public class ProductController {
+
+    @Autowired
+    IProduct iProduct;
+
+
+
+    @GetMapping("/shop")
+    public String ListProduct(Model model){
+        Set<ProductDto> productDtos = iProduct.searchAllProduct();
+        model.addAttribute("productDtos",productDtos);
+        return "products";
+    }
+
+    @GetMapping("/detail")
+    public String pageDetail(@RequestParam(name = "numero") String numero , Model model){
+        ProductDto productDto = iProduct.searchProductByReference(numero);
+        model.addAttribute("productDto",productDto);
+        return "product_details";
+    }
+
+    @GetMapping("/supprimerproduits")
+    public String pageSupprimer(@RequestParam(name="numero") String numero , Model model){
+        iProduct.deleteProduct(numero);
+        return "redirect:/products";
+    }
+
+    @GetMapping("/rechercherParCategories")
+    public String pageproduits_categories(@RequestParam(value = "keyword") String keyword,Model model){
+
+        Set<ProductDto> productDtos = iProduct.searchProductByCategory(keyword);
+        model.addAttribute("productDtos",productDtos);
+        return "products";
+    }
+
+    @GetMapping("/rechercherproduits")
+    public String rechercherProduits(@RequestParam(value ="keyword") String keyword,Model model){
+
+        try{
+            //faire en sorte que cela genere une exception
+            ProductDto  productDto = iProduct.searchProductByReference(keyword);
+            model.addAttribute("productDto",productDto);
+        }catch (Exception e){
+            System.out.println(e.getMessage());
+            Set<ProductDto> productDtos = iProduct.searchProductByKeyword(keyword);
+            model.addAttribute("productDtos",productDtos);
+
+        }
+        return "products";
+
+    }
+
+    @GetMapping("/produits/enregistrerform")
+    public String enregistrerform(Model model){
+        ProductDto productDto = new ProductDto();
+        model.addAttribute("productDto",productDto);
+        return "enregistrer-product";
+    }
+
+    @PostMapping("/produits/enregistrer")
+    public String enregistrerproduits(@ModelAttribute ProductDto productDto, Model model){
+        ProductController.log.info("enregistrer-product");
+        iProduct.saveProduct(productDto);
+        return "redirect:/dashboard";
+    }
+
+
+    @GetMapping("/produits/editerform")
+    public String editerform(Model model){
+        ProductDto productDto = new ProductDto();
+        model.addAttribute("productDto",productDto);
+        return "editer-product";
+    }
+
+    @PostMapping("/produits/editer")
+    public String editerproduits(@ModelAttribute ProductDto productDto, Model model){
+        ProductController.log.info("produit-editer");
+        //ajouter la methode editer
+        return "redirect:/dashboard";
+    }
+}
+
Index: src/main/java/com/beapsmarket/webapp/presentation/controller/ShoppingListcontroller.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/beapsmarket/webapp/presentation/controller/ShoppingListcontroller.java b/src/main/java/com/beapsmarket/webapp/presentation/controller/ShoppingListcontroller.java
new file mode 100644
--- /dev/null	(date 1654161299115)
+++ b/src/main/java/com/beapsmarket/webapp/presentation/controller/ShoppingListcontroller.java	(date 1654161299115)
@@ -0,0 +1,64 @@
+package com.beapsmarket.webapp.presentation.controller;
+
+
+import com.beapsmarket.webapp.model.dto.ShoppingListDto;
+import com.beapsmarket.webapp.service.IShoppingList;
+import lombok.extern.slf4j.Slf4j;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Controller;
+import org.springframework.ui.Model;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.ModelAttribute;
+import org.springframework.web.bind.annotation.PostMapping;
+import org.springframework.web.bind.annotation.RequestParam;
+
+import java.util.Set;
+
+@Controller
+@Slf4j
+public class ShoppingListcontroller {
+    @Autowired
+    IShoppingList iShoppingList;
+
+    @GetMapping("/listshoppingLists")
+    public String chartpage(Model model){
+        Set<ShoppingListDto> shoppingListDtos =iShoppingList.ListShoppingList();
+        model.addAttribute("shoppinglistDtos",shoppingListDtos);
+        return "chart";
+    }
+    //revoir cette methode
+    @PostMapping("/shoppingList/enregistrer")
+    public String validershoppingList(@ModelAttribute ShoppingListDto shoppingListDto,Model model){
+        ShoppingListcontroller.log.info("ShoppingList-valider");
+        iShoppingList.saveShoppingList(shoppingListDto);
+        return "chart";
+    }
+
+    //revoir la page retournee dans cette methode , comment afficher les
+    //resultats de la recherche sans creer une autre page pour l'afficher
+    @PostMapping("/shoppingList/rechercher")
+    public String recherchershoppinglist(@RequestParam(value = "keyword")String keyword, Model model){
+
+        try{
+            //faire en sorte que cela genere une exception
+            ShoppingListDto shoppingListDto = iShoppingList.searchShoppingListByReference(keyword);
+            model.addAttribute("shoppingListDto",shoppingListDto);
+        }catch (Exception e){
+            System.out.println(e.getMessage());
+            ShoppingListDto shoppingListDto = iShoppingList.searchShoppingListByName(keyword);
+            model.addAttribute("shoppingListDto",shoppingListDto);
+
+        }
+
+        return "chart";
+
+
+        //Ecrire la methode update
+    }
+
+
+
+
+
+
+}
Index: src/main/java/com/beapsmarket/webapp/service/AddressServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.beapsmarket.webapp.service;\r\n\r\nimport com.beapsmarket.webapp.mapper.AddressMapper;\r\nimport com.beapsmarket.webapp.model.dto.AddressDto;\r\nimport com.beapsmarket.webapp.model.dto.UserDto;\r\nimport com.beapsmarket.webapp.model.entities.Address;\r\nimport com.beapsmarket.webapp.repository.AddressRepository;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport java.util.HashSet;\r\nimport java.util.Set;\r\nimport java.util.stream.Collectors;\r\n\r\n@Service\r\npublic class AddressServiceImpl implements IAddress{\r\n\r\n    @Autowired\r\n    AddressRepository addressRepository;\r\n    @Autowired\r\n    AddressMapper addressMapper;\r\n\r\n\r\n    @Override\r\n    public int saveAddress(AddressDto addressDto) {\r\n        if (addressRepository.existsByCode(addressDto.getCode())){\r\n            return -1;\r\n        }\r\n        return addressRepository.save(addressMapper.toEntity(addressDto)).getId().intValue();\r\n    }\r\n\r\n    @Override\r\n    public Set<AddressDto> findAllAddress() {\r\n        Set<Address> address = new HashSet<>(addressRepository.findAll());\r\n        return address.stream().map(addressMapper::toDto).collect(Collectors.toSet());\r\n    }\r\n\r\n    @Override\r\n    public Set<AddressDto> findAddressesOfUser(UserDto userDto) {\r\n        return addressRepository.findByUser_Email(userDto.getEmail()).get().stream()\r\n                .map(addressMapper::toDto)\r\n                .collect(Collectors.toSet());\r\n    }\r\n\r\n    @Override\r\n    public AddressDto findAddressByCode(int i) {\r\n        return addressMapper.toDto(addressRepository.findByCode(i));\r\n    }\r\n\r\n\r\n    @Override\r\n    public int updateAddress(AddressDto addressDto) {\r\n        try {\r\n            Address address = addressRepository.findByCode(addressDto.getCode());\r\n            addressMapper.copy(addressDto, address);\r\n            return addressRepository.save(address).getId().intValue();\r\n        }catch (Exception e){\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    @Override\r\n    public int deleteAddress(AddressDto addressDto) {\r\n        try{\r\n            addressRepository.delete(addressMapper.toEntity(addressDto));\r\n            return 0;\r\n        }catch (Exception e){\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return -1;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/beapsmarket/webapp/service/AddressServiceImpl.java b/src/main/java/com/beapsmarket/webapp/service/AddressServiceImpl.java
--- a/src/main/java/com/beapsmarket/webapp/service/AddressServiceImpl.java	(revision aeb32d9adca38e29f674edbc26b38bdb8198ca72)
+++ b/src/main/java/com/beapsmarket/webapp/service/AddressServiceImpl.java	(date 1654095267713)
@@ -35,12 +35,6 @@
         return address.stream().map(addressMapper::toDto).collect(Collectors.toSet());
     }
 
-    @Override
-    public Set<AddressDto> findAddressesOfUser(UserDto userDto) {
-        return addressRepository.findByUser_Email(userDto.getEmail()).get().stream()
-                .map(addressMapper::toDto)
-                .collect(Collectors.toSet());
-    }
 
     @Override
     public AddressDto findAddressByCode(int i) {
Index: src/main/java/com/beapsmarket/webapp/service/IProduct.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.beapsmarket.webapp.service;\r\n\r\n\r\nimport com.beapsmarket.webapp.model.dto.ProductDto;\r\n\r\n\r\nimport java.util.Set;\r\n\r\npublic interface IProduct {\r\n  int saveProduct(ProductDto productDto);\r\n  ProductDto searchProductByReference(String reference);\r\n  Set<ProductDto> searchProductByKeyword(String keyword);\r\n  Set<ProductDto> searchAllProduct();\r\n int deleteProduct(String reference);\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/beapsmarket/webapp/service/IProduct.java b/src/main/java/com/beapsmarket/webapp/service/IProduct.java
--- a/src/main/java/com/beapsmarket/webapp/service/IProduct.java	(revision aeb32d9adca38e29f674edbc26b38bdb8198ca72)
+++ b/src/main/java/com/beapsmarket/webapp/service/IProduct.java	(date 1654156288868)
@@ -1,15 +1,16 @@
 package com.beapsmarket.webapp.service;
 
-
+import com.beapsmarket.webapp.model.dto.CategoryDto;
 import com.beapsmarket.webapp.model.dto.ProductDto;
 
-
+import java.util.List;
 import java.util.Set;
 
 public interface IProduct {
-  int saveProduct(ProductDto productDto);
-  ProductDto searchProductByReference(String reference);
-  Set<ProductDto> searchProductByKeyword(String keyword);
-  Set<ProductDto> searchAllProduct();
- int deleteProduct(String reference);
+ int saveProduct(ProductDto productDto);
+ int deleteProduct(String numero);
+ Set<ProductDto> searchProductByCategory(String idcategorie);
+ ProductDto searchProductByReference(String reference);
+ Set<ProductDto>searchProductByKeyword(String keyword);
+ Set<ProductDto> searchAllProduct();
 }
Index: src/main/java/com/beapsmarket/webapp/presentation/api/AddressRestController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.beapsmarket.webapp.presentation.api;\r\n\r\nimport com.beapsmarket.webapp.model.dto.AddressDto;\r\nimport com.beapsmarket.webapp.model.dto.UserDto;\r\nimport com.beapsmarket.webapp.service.IAddress;\r\nimport lombok.extern.slf4j.Slf4j;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.*;\r\n\r\nimport java.util.Set;\r\n\r\n@RestController\r\n@RequestMapping(\"/api/address\")\r\n@Slf4j\r\npublic class AddressRestController {\r\n    @Autowired\r\n    IAddress iAddress;\r\n\r\n    @PostMapping(value = \"/save\")\r\n    public void saveAddress(@RequestBody AddressDto addressDto) {\r\n        AddressRestController.log.info(\"enregistrer-acte\");\r\n        iAddress.saveAddress(addressDto);\r\n    }\r\n\r\n    @GetMapping(\"/all\")\r\n    public ResponseEntity<Set<AddressDto>> getAllAddress(){\r\n        return ResponseEntity.ok(iAddress.findAllAddress());\r\n    }\r\n\r\n\r\n    @GetMapping(\"/{code}/user\")\r\n    public ResponseEntity<UserDto> getUserByAddress(@PathVariable int code) {\r\n        return ResponseEntity.ok(iAddress.findAddressByCode(code).getUserDto());\r\n    }\r\n\r\n    @GetMapping(\"/{code}/data\")\r\n    public ResponseEntity<AddressDto> getAddressByCode(@PathVariable int code) {\r\n        return ResponseEntity.ok(iAddress.findAddressByCode(code));\r\n    }\r\n\r\n    @GetMapping(\"/{code}/delete\")\r\n    public  void deleteAddress(@PathVariable int code){\r\n        iAddress.findAddressByCode(code);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/beapsmarket/webapp/presentation/api/AddressRestController.java b/src/main/java/com/beapsmarket/webapp/presentation/api/AddressRestController.java
--- a/src/main/java/com/beapsmarket/webapp/presentation/api/AddressRestController.java	(revision aeb32d9adca38e29f674edbc26b38bdb8198ca72)
+++ b/src/main/java/com/beapsmarket/webapp/presentation/api/AddressRestController.java	(date 1654095865297)
@@ -29,10 +29,6 @@
     }
 
 
-    @GetMapping("/{code}/user")
-    public ResponseEntity<UserDto> getUserByAddress(@PathVariable int code) {
-        return ResponseEntity.ok(iAddress.findAddressByCode(code).getUserDto());
-    }
 
     @GetMapping("/{code}/data")
     public ResponseEntity<AddressDto> getAddressByCode(@PathVariable int code) {
Index: src/main/java/com/beapsmarket/webapp/presentation/api/ProductRestController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/beapsmarket/webapp/presentation/api/ProductRestController.java b/src/main/java/com/beapsmarket/webapp/presentation/api/ProductRestController.java
new file mode 100644
--- /dev/null	(date 1654088779454)
+++ b/src/main/java/com/beapsmarket/webapp/presentation/api/ProductRestController.java	(date 1654088779454)
@@ -0,0 +1,49 @@
+package com.beapsmarket.webapp.presentation.api;
+
+
+import com.beapsmarket.webapp.model.dto.ProductDto;
+import com.beapsmarket.webapp.service.IProduct;
+import lombok.extern.slf4j.Slf4j;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.http.ResponseEntity;
+import org.springframework.web.bind.annotation.*;
+
+import java.util.Set;
+
+@RestController
+@RequestMapping("/api/product")
+@Slf4j
+public class ProductRestController {
+    @Autowired
+    IProduct iProduct;
+
+
+    @PostMapping(value = "/save")
+    public void saveProduct(@RequestBody ProductDto productDto) {
+        ProductRestController.log.info("enregistrer-produit");
+        iProduct.saveProduct(productDto);
+    }
+
+    @GetMapping("/{code}/delete")
+    public  void deleteProduct(@PathVariable String code){
+        iProduct.deleteProduct(code);
+    }
+
+    @GetMapping("/all")
+    public ResponseEntity<Set<ProductDto>> getAllProduct(){
+        return ResponseEntity.ok(iProduct.searchAllProduct());
+    }
+
+    @GetMapping("/{reference}/data")
+    public ResponseEntity<ProductDto> getProductByReference(@PathVariable String reference) {
+        return ResponseEntity.ok(iProduct.searchProductByReference(reference));
+    }
+
+    @GetMapping("/{name}/data")
+    public ResponseEntity<Set<ProductDto>> getProductByName(@PathVariable String name ) {
+        return ResponseEntity.ok(iProduct.searchProductByKeyword(name));
+    }
+
+
+}
+
Index: src/main/java/com/beapsmarket/webapp/repository/ShoppingListRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.beapsmarket.webapp.repository;\r\n\r\nimport com.beapsmarket.webapp.model.entities.ShoppingList;\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\n\r\nimport java.util.Optional;\r\n\r\npublic interface ShoppingListRepository extends JpaRepository<ShoppingList, Long> {\r\n\r\n    ShoppingList findByNameIgnoreCase(String string);\r\n    ShoppingList deleteByReference(String reference);\r\n    ShoppingList findByReference(String string);\r\n\r\n    boolean existsByReference(String string);\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/beapsmarket/webapp/repository/ShoppingListRepository.java b/src/main/java/com/beapsmarket/webapp/repository/ShoppingListRepository.java
--- a/src/main/java/com/beapsmarket/webapp/repository/ShoppingListRepository.java	(revision aeb32d9adca38e29f674edbc26b38bdb8198ca72)
+++ b/src/main/java/com/beapsmarket/webapp/repository/ShoppingListRepository.java	(date 1654083363456)
@@ -11,5 +11,6 @@
     ShoppingList deleteByReference(String reference);
     ShoppingList findByReference(String string);
 
+
     boolean existsByReference(String string);
 }
Index: src/main/java/com/beapsmarket/webapp/presentation/api/ShoppingListRestController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/beapsmarket/webapp/presentation/api/ShoppingListRestController.java b/src/main/java/com/beapsmarket/webapp/presentation/api/ShoppingListRestController.java
new file mode 100644
--- /dev/null	(date 1654086957477)
+++ b/src/main/java/com/beapsmarket/webapp/presentation/api/ShoppingListRestController.java	(date 1654086957477)
@@ -0,0 +1,44 @@
+package com.beapsmarket.webapp.presentation.api;
+
+
+import com.beapsmarket.webapp.model.dto.AddressDto;
+import com.beapsmarket.webapp.model.dto.ShoppingListDto;
+import com.beapsmarket.webapp.service.IShoppingList;
+import lombok.extern.slf4j.Slf4j;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.http.ResponseEntity;
+import org.springframework.web.bind.annotation.*;
+
+import java.util.Set;
+
+@RestController
+@RequestMapping("/api/shoppingList")
+@Slf4j
+public class ShoppingListRestController {
+    @Autowired
+    IShoppingList iShoppingList;
+
+    @PostMapping(value = "/save")
+    public void saveAddress(@RequestBody ShoppingListDto shoppingListDto) {
+        ShoppingListRestController.log.info("enregistrer-shoppingList");
+        iShoppingList.saveShoppingList(shoppingListDto);
+    }
+    @GetMapping("/{code}/delete")
+    public  void deleteShoppingList(@PathVariable String code){
+        iShoppingList.deleteShoppingList(code);
+    }
+
+    @GetMapping("/all")
+    public ResponseEntity<Set<ShoppingListDto>> getAllShoppingList(){
+        return ResponseEntity.ok(iShoppingList.ListShoppingList());
+    }
+
+
+    @GetMapping("/{code}/data")
+    public ResponseEntity<ShoppingListDto> getAddressByCode(@PathVariable String code) {
+        return ResponseEntity.ok(iShoppingList.searchShoppingListByReference(code));
+    }
+
+
+
+}
Index: src/main/java/com/beapsmarket/webapp/model/dto/AddressDto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.beapsmarket.webapp.model.dto;\r\n\r\n\r\nimport lombok.AllArgsConstructor;\r\nimport lombok.Data;\r\nimport lombok.NoArgsConstructor;\r\n\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.GeneratedValue;\r\nimport javax.persistence.GenerationType;\r\nimport javax.persistence.Id;\r\n\r\n@NoArgsConstructor\r\n@AllArgsConstructor\r\n@Data\r\npublic class AddressDto {\r\n\r\n\tprivate int code;\r\n\tprivate String quarter;\r\n\tprivate String mark;\r\n\tprivate String country;\r\n\tprivate UserDto userDto;\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/beapsmarket/webapp/model/dto/AddressDto.java b/src/main/java/com/beapsmarket/webapp/model/dto/AddressDto.java
--- a/src/main/java/com/beapsmarket/webapp/model/dto/AddressDto.java	(revision aeb32d9adca38e29f674edbc26b38bdb8198ca72)
+++ b/src/main/java/com/beapsmarket/webapp/model/dto/AddressDto.java	(date 1654095102807)
@@ -19,5 +19,4 @@
 	private String quarter;
 	private String mark;
 	private String country;
-	private UserDto userDto;
 }
\ No newline at end of file
Index: src/main/java/com/beapsmarket/webapp/service/ProductServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.beapsmarket.webapp.service;\r\n\r\n\r\nimport com.beapsmarket.webapp.mapper.ProductMapper;\r\nimport com.beapsmarket.webapp.model.dto.ProductDto;\r\nimport com.beapsmarket.webapp.repository.ProductRepository;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport java.util.Set;\r\nimport java.util.stream.Collectors;\r\n\r\n@Service\r\npublic class ProductServiceImpl implements IProduct{\r\n\r\n    @Autowired\r\n    ProductRepository productRepository;\r\n\r\n    @Autowired\r\n    ProductMapper productMapper;\r\n\r\n    @Override\r\n    public int saveProduct(ProductDto productDto) {\r\n        if (productRepository.existsByReference(productDto.getReference())){\r\n            return productRepository.save(productMapper.toEntity(productDto)).getId().intValue();\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    @Override\r\n    public int deleteProduct(String reference) {\r\n        try{\r\n            productRepository.deleteById(productRepository.findByReference(reference).getId());\r\n            return 0;\r\n        }catch (Exception e){\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    @Override\r\n    public ProductDto searchProductByReference(String reference) {\r\n        try{\r\n            return productMapper.toDto(productRepository.findByReference(reference));\r\n        }catch (Exception e){\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public Set<ProductDto> searchProductByKeyword(String keyword) {\r\n        try{\r\n            return productRepository.findByName(keyword).get().stream()\r\n                    .map(productMapper::toDto)\r\n                    .collect(Collectors.toSet());\r\n        }catch (Exception e){\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public Set<ProductDto> searchAllProduct() {\r\n        return productRepository.findAll().stream()\r\n                .map(productMapper::toDto)\r\n                .collect(Collectors.toSet());\r\n    }\r\n\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/beapsmarket/webapp/service/ProductServiceImpl.java b/src/main/java/com/beapsmarket/webapp/service/ProductServiceImpl.java
--- a/src/main/java/com/beapsmarket/webapp/service/ProductServiceImpl.java	(revision aeb32d9adca38e29f674edbc26b38bdb8198ca72)
+++ b/src/main/java/com/beapsmarket/webapp/service/ProductServiceImpl.java	(date 1654156288830)
@@ -2,6 +2,7 @@
 
 
 import com.beapsmarket.webapp.mapper.ProductMapper;
+import com.beapsmarket.webapp.model.dto.CategoryDto;
 import com.beapsmarket.webapp.model.dto.ProductDto;
 import com.beapsmarket.webapp.repository.ProductRepository;
 import org.springframework.beans.factory.annotation.Autowired;
@@ -38,6 +39,11 @@
         return -1;
     }
 
+    @Override
+    public Set<ProductDto> searchProductByCategory(String idcategorie) {
+        return null;
+    }
+
     @Override
     public ProductDto searchProductByReference(String reference) {
         try{
@@ -60,6 +66,7 @@
         return null;
     }
 
+
     @Override
     public Set<ProductDto> searchAllProduct() {
         return productRepository.findAll().stream()
Index: src/main/java/com/beapsmarket/webapp/presentation/controller/CategoryController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/beapsmarket/webapp/presentation/controller/CategoryController.java b/src/main/java/com/beapsmarket/webapp/presentation/controller/CategoryController.java
new file mode 100644
--- /dev/null	(date 1654161299138)
+++ b/src/main/java/com/beapsmarket/webapp/presentation/controller/CategoryController.java	(date 1654161299138)
@@ -0,0 +1,4 @@
+package com.beapsmarket.webapp.presentation.controller;
+
+public class CategoryController {
+}
Index: src/main/java/com/beapsmarket/webapp/presentation/controller/AddressController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/beapsmarket/webapp/presentation/controller/AddressController.java b/src/main/java/com/beapsmarket/webapp/presentation/controller/AddressController.java
new file mode 100644
--- /dev/null	(date 1654161299166)
+++ b/src/main/java/com/beapsmarket/webapp/presentation/controller/AddressController.java	(date 1654161299166)
@@ -0,0 +1,4 @@
+package com.beapsmarket.webapp.presentation.controller;
+
+public class AddressController {
+}
Index: src/main/java/com/beapsmarket/webapp/service/ShoppingListServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.beapsmarket.webapp.service;\r\n\r\nimport com.beapsmarket.webapp.mapper.ShoppingListMapper;\r\nimport com.beapsmarket.webapp.model.dto.ShoppingListDto;\r\nimport com.beapsmarket.webapp.model.entities.ShoppingList;\r\nimport com.beapsmarket.webapp.repository.ShoppingListRepository;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport java.util.List;\r\nimport java.util.stream.Collectors;\r\n\r\n@Service\r\npublic class ShoppingListServiceImpl implements IShoppingList{\r\n    @Autowired\r\n    ShoppingListMapper shoppingListMapper;\r\n    @Autowired\r\n    ShoppingListRepository shoppingListRepository;\r\n    @Override\r\n    public int deleteShoppingList(String reference) {\r\n        try{\r\n            shoppingListRepository.delete(shoppingListRepository.findByReference(reference));\r\n            return 0;\r\n        }catch (Exception e){\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    @Override\r\n    public int saveShoppingList(ShoppingListDto shoppingListDto) {\r\n        if(shoppingListRepository.existsByReference(shoppingListDto.getReference())){\r\n            shoppingListRepository.save(shoppingListMapper.toEntity(shoppingListDto));\r\n            return 0;\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    @Override\r\n    public ShoppingListDto searchShoppingListByReference(String reference) {\r\n        try {\r\n            return shoppingListMapper.toDto(shoppingListRepository.findByReference(reference));\r\n        }catch (Exception e){\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public ShoppingListDto searchShoppingListByName(String name) {\r\n        try{\r\n            return shoppingListMapper.toDto(shoppingListRepository.findByNameIgnoreCase(name));\r\n        }catch (Exception e){\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return null;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/beapsmarket/webapp/service/ShoppingListServiceImpl.java b/src/main/java/com/beapsmarket/webapp/service/ShoppingListServiceImpl.java
--- a/src/main/java/com/beapsmarket/webapp/service/ShoppingListServiceImpl.java	(revision aeb32d9adca38e29f674edbc26b38bdb8198ca72)
+++ b/src/main/java/com/beapsmarket/webapp/service/ShoppingListServiceImpl.java	(date 1654085939786)
@@ -8,6 +8,7 @@
 import org.springframework.stereotype.Service;
 
 import java.util.List;
+import java.util.Set;
 import java.util.stream.Collectors;
 
 @Service
@@ -16,6 +17,15 @@
     ShoppingListMapper shoppingListMapper;
     @Autowired
     ShoppingListRepository shoppingListRepository;
+
+
+
+    @Override
+    public int updateShoppingList(ShoppingListDto shoppingListDto) {
+        return 2;
+    }
+
+
     @Override
     public int deleteShoppingList(String reference) {
         try{
@@ -27,6 +37,11 @@
         return -1;
     }
 
+    @Override
+    public Set<ShoppingListDto> ListShoppingList() {
+        return null;
+    }
+
     @Override
     public int saveShoppingList(ShoppingListDto shoppingListDto) {
         if(shoppingListRepository.existsByReference(shoppingListDto.getReference())){
Index: src/main/java/com/beapsmarket/webapp/service/IShoppingList.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.beapsmarket.webapp.service;\r\n\r\nimport com.beapsmarket.webapp.model.dto.ShoppingListDto;\r\nimport com.beapsmarket.webapp.model.entities.ShoppingList;\r\n\r\nimport java.util.List;\r\n\r\npublic interface IShoppingList {\r\n    int saveShoppingList(ShoppingListDto shoppingListDto);\r\n    ShoppingListDto searchShoppingListByReference (String reference);\r\n    ShoppingListDto searchShoppingListByName(String name);\r\n    int deleteShoppingList(String reference);\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/beapsmarket/webapp/service/IShoppingList.java b/src/main/java/com/beapsmarket/webapp/service/IShoppingList.java
--- a/src/main/java/com/beapsmarket/webapp/service/IShoppingList.java	(revision aeb32d9adca38e29f674edbc26b38bdb8198ca72)
+++ b/src/main/java/com/beapsmarket/webapp/service/IShoppingList.java	(date 1654085939754)
@@ -4,10 +4,13 @@
 import com.beapsmarket.webapp.model.entities.ShoppingList;
 
 import java.util.List;
+import java.util.Set;
 
 public interface IShoppingList {
-    int saveShoppingList(ShoppingListDto shoppingListDto);
+    int deleteShoppingList(String reference);
+    Set<ShoppingListDto> ListShoppingList();
     ShoppingListDto searchShoppingListByReference (String reference);
     ShoppingListDto searchShoppingListByName(String name);
-    int deleteShoppingList(String reference);
+     int updateShoppingList(ShoppingListDto shoppingListDto);
+     int saveShoppingList(ShoppingListDto shoppingListDto);
 }
Index: src/main/java/com/beapsmarket/webapp/presentation/controller/DeliveryController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/beapsmarket/webapp/presentation/controller/DeliveryController.java b/src/main/java/com/beapsmarket/webapp/presentation/controller/DeliveryController.java
new file mode 100644
--- /dev/null	(date 1654164809402)
+++ b/src/main/java/com/beapsmarket/webapp/presentation/controller/DeliveryController.java	(date 1654164809402)
@@ -0,0 +1,41 @@
+package com.beapsmarket.webapp.presentation.controller;
+
+import com.beapsmarket.webapp.model.dto.DeliveryDto;
+import com.beapsmarket.webapp.service.IDelivery;
+import lombok.extern.slf4j.Slf4j;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Controller;
+import org.springframework.ui.Model;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.PostMapping;
+import org.springframework.web.bind.annotation.RequestParam;
+
+import java.util.Set;
+
+@Controller
+@Slf4j
+public class DeliveryController {
+
+    @Autowired
+    IDelivery iDelivery;
+
+
+
+
+    @GetMapping("/listDelivery")
+    public String pageDelivery(Model model){
+        Set<DeliveryDto> deliveryDtos = iDelivery.findAllDelivery();
+        model.addAttribute("deliveryDtos",deliveryDtos);
+        return "deliveryPage";
+
+    }
+
+    @PostMapping("/delivery/rechercher")
+    public String rechercherdelivery(@RequestParam(value="keyword") String keyword, Model model){
+        DeliveryDto deliveryDto = iDelivery.findDeliveryByReference(keyword);
+        model.addAttribute("deliveryDto",deliveryDto);
+        return "rechercherDelivery";
+    }
+
+
+}
